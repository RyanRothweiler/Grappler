Working on:
   ☐ show grapple iamge
   ☐ grapple onto an the test enemy
   ☐ give enemies health
   ☐ visualize enemies health with a bar on screen
   ☐ destory enemies when they die
   ☐ generate four walls
   ☐ flash the screen red when hit an enemy
   ☐ test things with two enemies


General:
   ☐ put in safeguards so when loading a savestate from a previous version it doesn't crash
   ☐ create some movement based on time, to smooth things out
   ☐ Combine the RenderSquares and RenderImges list. So those can be drawn and layered together
   ☐ switch player health over to images
   ☐ create an animated sprite

Gameplay:
 
Later:
   ☐ look at using intrinsics for some of the math functions
   ☐ extend audio to support stereo
   ☐ handle resizing the window
   ☐ Change color to use floats (0.0 - 1.0) instead of (0 - 255)
   ☐ when pushing a square or texture, I'm creating a lot of temporary data. Maybe keep that data around but edit it when pushing
   ☐ create a way to visualize all the collider boxes for every entity

UI:
   ☐ ui button with normal / selected / down states
   ☐ ui button concept
   ☐ rendering text on screen from font file
   ☐ show fps in game
   ☐ show warnings on screen in game. such as warning when file not found

Bugs:
   ☐ player rotation seems to snap to a few values. moving the player in a circle isn't smooth

  







＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ show the player when r1 is being held but still allow latching. @done (15-08-26 20:46) @project(Working on)
 ✔ create a visible latching radius @done (15-08-26 20:19) @project(Working on)
 ✔ smooth out the facing forward rotation of the player  @done (15-08-24 21:10) @project(Working on)
 ✔ create collision box which is separate from image size @done (15-08-24 20:55) @project(Working on)
 ✔ Some controller button to stop the code where and when I want  @done (15-08-24 20:42) @project(Other)
 ✔ the player always faces in the directionm he is moving  @done (15-08-24 16:04) @project(Working on)
 ✔ create a facing direction for the player @done (15-08-24 15:37) @project(Working on)
 ✔ open gl rotate image @done (15-08-23 21:24) @project(Working on)
 ✔ change player over to an image  @done (15-08-23 21:24) @project(Working on)
 ✔ transparent bitmaps @done (15-08-23 19:46) @project(Working on)
 ✔ create a render order (did this a little. r) @done (15-08-23 18:34) @project(Working on)
 ✔ test background moving with camera @done (15-08-23 18:23) @project(Graphics)
 ✔ a random dfloat generator within a range @done (15-08-23 13:24) @project(Working on)
 ✔ test enemy which moves to random locations @done (15-08-23 12:50) @project(Working on)
 ✔ add some other entropy into random number gen. Initializing with a random number always chooses the same value @done (15-08-23 12:50) @project(General)
 ✔ a random int generator within a range @done (15-08-23 12:50) @project(Working on)
 ✔ infinitely tileable background (didn't make infinite, but it's quite large) @done (15-08-12 07:55) @project(Working on)
 ✔ visualize player health in ui @done (15-08-10 11:45) @project(Working on)
 ✔ create an interface with the platform layer to render loaded_images at locations. @done (15-08-10 11:45) @project(Working on)
 ✔ move world zero offset into game layer. only talk to the platform layer through a list of gl squares @done (15-08-10 11:24) @project(Working on)
 ✔ Find a way to assert the size of an array is not greater than we think it is @done (15-08-10 11:24) @project(Code)
 ✔ player takes damage using the above collision features @done (15-08-07 02:18) @project(Physics)
 ✔ collision checking allowing OnCollision @done (15-08-07 01:47) @project(Physics)
 ✔ collision checking allowing IsColliding @done (15-08-07 01:47) @project(Physics)
 ✔ test all these collision features with different sized squares @done (15-08-06 10:41) @project(Physics)
 ✔ allow colliding objects to slide on eachother @done (15-08-06 10:40) @project(Physics)
 ✔ when objects collide move the collider the difference so no gaps @done (15-08-06 09:12) @project(Physics)
 ✔ smooth camera follower @done (15-08-06 02:37) @project(General)
 ✔ use git command line to commit the project (going to try the github desktop app for a while. Maybe it's better than sourcetree) @done (15-08-04 04:23) @project(General)
 ✔ try to pull save state code out into methods @done (15-08-04 04:05) @project(General)
 ✔ switch color constants to #defines? Is this a good idea? @done (15-08-04 01:35) @project(Color)
 ✔ render bitmap background with opengl @done (15-08-03 08:29) @project(Graphics)
 ✔ opengl drawing bitmap @done (15-08-03 08:29) @project(Graphics)
 ✔ fix GLLoadBMP to re order pixels to display the image correctly @done (15-08-03 08:29) @project(General)
 ✔ strip out all old windows software rendering code @done (15-08-03 06:52) @project(General)
 ✔ opengl drawing square @done (15-08-02 03:19) @project(General)
 ✔ make sure state loading still works in opengl @done (15-08-02 03:03) @project(General)
 ✔ make sure sound still works in opengl @done (15-08-01 12:16) @project(General)
 ✔ opening opengl window @done (15-08-01 07:53) @project(General)
